%html
  %head
    %script{:src => "https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js", :type => "application/javascript"}
    %script{:src => "assets/pssh.js", :type => "application/javascript"}
    %script{:src => "assets/term.js", :type => "application/javascript"}
    :javascript
      jQuery(function() {

        // Calculate the width of a character
        var k = document.createElement('span.monospace');
        k.innerHTML = '_';
        k.style.position = 'absolute';
        document.body.appendChild(k);
        var size = [
          k.offsetWidth,
          13
        ];
        document.body.removeChild(k);

        // Determine the browser width
        width = parseInt($(window).width() / size[0]);
        height = parseInt($(window).height() / size[1]);

        // Set up the socket and the terminal
        first_time = true;
        var client = new PsshClient('#{unique_id}');
        var term = new Terminal(width, height, function(key) {
          client.send(key);
        });
        term.open();
        $('.terminal').detach().appendTo('#term');

        // Pretty sloppy usage that when connected sends over
        // the browser size so we can request the right size window.
        // It also handles reconnecting, which could more than likely
        // be baked into the PsshClient.
        client.connect($.extend({}, {
            onError: function(error) {
                term.write('Error: ' + error + "\\r\\n");
            },
            onConnect: function() {
                if(first_time == true) {
                  term.write('\r');
                  client.start(width, height);
                  first_time = false;
                }
            },
            onClose: function() {
              term.destroy();
              $('.terminal').remove();
            },
            onTerminate: function() {
            },
            onData: function(data) {
                term.write(data);
            }
        }));

        // When we resize the window, make sure the terminal changes too.
        $(window).resize( function() {
          width = parseInt($(window).width() / size[0]);
          height = parseInt($(window).height() / size[1]);
          client.resize(width, height);
          term.resize(width, height);
        });

      });
    %link{:href => "assets/bootstrap.css", :rel => "stylesheet"}/
    %link{:href => "assets/style.css", :rel => "stylesheet"}/
  %body
    #term
